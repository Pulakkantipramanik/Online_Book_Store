name: SonarQube Analysis
on:
  push:
    branches: [ main ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Start SonarQube with Pre-configured Token
      run: |
        # Start SonarQube with initial admin token
        docker run -d --name sonarqube -p 9000:9000 \
          -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
          -e SONAR_FORCEAUTHENTICATION=false \
          sonarqube:community
        echo "Waiting for SonarQube to start..."
        sleep 120
        
        # Generate a token for analysis
        TOKEN_RESPONSE=$(curl -s -u admin:admin -X POST "http://localhost:9000/api/user_tokens/generate" \
          -d "name=github-actions" \
          -d "type=GLOBAL_ANALYSIS_TOKEN" || echo "failed")
        
        if [[ "$TOKEN_RESPONSE" != "failed" ]]; then
          echo "TOKEN=$(echo $TOKEN_RESPONSE | grep -o '"token":"[^"]*' | cut -d'"' -f4)" >> $GITHUB_ENV
        else
          echo "TOKEN=admin" >> $GITHUB_ENV
        fi

    - name: Run Analysis with Token
      env:
        SONAR_TOKEN: ${{ env.TOKEN }}
      run: |
        mvn clean compile sonar:sonar \
          -Dsonar.projectKey=Online_Book_Store \
          -Dsonar.projectName="Online Book Store" \
          -Dsonar.host.url=http://localhost:9000 \
          -Dsonar.token=$SONAR_TOKEN

    - name: Stop SonarQube
      if: always()
      run: docker rm -f sonarqube
